FROM registry.redhat.io/ubi9/ubi-minimal as web-builder

ENV APP_ROOT=/opt/app-root \
    HOME=/opt/app-root/src \
    NPM_RUN=start \
    PLATFORM="el8" \
    NODEJS_VERSION=18 \
    NPM_RUN=start \
    NAME=nodejs

ENV NPM_CONFIG_PREFIX=$HOME/.npm-global \
    PATH=$HOME/node_modules/.bin/:$HOME/.npm-global/bin/:$PATH

RUN INSTALL_PKGS="nodejs nodejs-nodemon npm findutils tar make" && \
    microdnf module disable nodejs -y && \
    microdnf module enable nodejs:$NODEJS_VERSION -y && \
    microdnf --nodocs install $INSTALL_PKGS -y && \
    microdnf clean all && \
    rm -rf /mnt/rootfs/var/cache/* /mnt/rootfs/var/log/dnf* /mnt/rootfs/var/log/yum.*

WORKDIR ${HOME}

ENV HUSKY=0
COPY web/package*.json ${HOME}/web/
COPY Makefile Makefile
RUN make install-frontend-ci

COPY web/ ${HOME}/web
RUN make build-frontend

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.17 as go-builder

WORKDIR /opt/app-root

COPY Makefile Makefile
COPY go.mod go.mod
COPY go.sum go.sum

RUN make install-backend

COPY config/ config/
COPY cmd/ cmd/
COPY pkg/ pkg/

RUN make build-backend

FROM registry.redhat.io/ubi9/ubi-minimal

RUN microdnf install nginx findutils && \
    mkdir /var/cache/nginx && \
    chown -R 1001:0 /var/lib/nginx /var/log/nginx /run && \
    chmod -R ug+rwX /var/lib/nginx /var/log/nginx /run

USER 1001

COPY --from=web-builder /opt/app-root/src/web/dist /opt/app-root/web/dist
COPY --from=go-builder /opt/app-root/plugin-backend /opt/app-root/plugin-backend

COPY --from=web-builder /opt/app-root/src/web/dist /usr/share/nginx/html

ENTRYPOINT ["nginx", "-g", "daemon off;"]

# When nginx is removed from CMO, we can use the following ENTRYPOINT instead
# ENTRYPOINT ["/opt/app-root/plugin-backend", "-static-path", "/opt/app-root/web/dist"]
